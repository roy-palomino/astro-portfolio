---
import Container from "../components/SectionContainer.astro";
import Button from "../components/Button.astro";

import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Container
  title={t("title.contact")}
  description={t("section.contact")}
  bgColorClass="secondary-gradient"
  titleColor="text-white"
  descriptionColor="text-white"
>
  <form id="contact-form" class="max-w-lg w-full">
    <div class="mb-5">
      <label
        for="name"
        class="block mb-2 text-lg font-medium text-white dark:text-green-500"
        >{t("form.name")}</label
      >
      <input
        type="text"
        id="name"
        class="bg-green-50 border border-green-500 text-green-900 dark:text-green-400 placeholder-green-700 dark:placeholder-green-500 text-sm rounded-lg focus:ring-green-500 focus:border-green-500 block w-full p-2.5 dark:bg-gray-700 dark:border-green-500"
        placeholder="Bonnie Green"
        required
      />
    </div>
    <div>
      <label
        for="email"
        class="block mb-2 text-sm font-medium text-red-700 dark:text-red-500"
        >{t("form.email")}</label
      >
      <input
        type="email"
        id="email"
        class="bg-red-50 border border-red-500 text-red-900 placeholder-red-700 text-sm rounded-lg focus:ring-red-500 dark:bg-gray-700 focus:border-red-500 block w-full p-2.5 dark:text-red-500 dark:placeholder-red-500 dark:border-red-500"
        placeholder="Bonnie Green"
        required
      />
      <p class="mt-2 text-sm text-red-600 dark:text-red-500">
        <span class="font-medium">Oops!</span> Username already taken!
      </p>
    </div>
    <div>
      <label
        for="message"
        class="block mb-2 text-sm font-medium text-red-700 dark:text-red-500"
        >Your name</label
      >
      <textarea
        id="message"
        class="bg-red-50 border border-red-500 text-red-900 placeholder-red-700 text-sm rounded-lg focus:ring-red-500 dark:bg-gray-700 focus:border-red-500 block w-full p-2.5 dark:text-red-500 dark:placeholder-red-500 dark:border-red-500"
        placeholder="Leave a message..."
      />
      <p class="mt-2 text-sm text-red-600 dark:text-red-500">
        <span class="font-medium">Oops!</span> Username already taken!
      </p>
    </div>
    <div class="w-full flex justify-center mt-4">
      <Button
        id="submit-button"
        class="mx-auto"
        type="submit"
        text="Contactar"
      />
    </div>
  </form>

  <div
    id="toast-default"
    class="hidden items-center w-full max-w-xs p-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800 fixed top-5 right-5"
    role="alert"
  >
    <div
      class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-blue-500 bg-blue-100 rounded-lg dark:bg-blue-800 dark:text-blue-200"
    >
      <svg
        class="w-4 h-4"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 18 20"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M15.147 15.085a7.159 7.159 0 0 1-6.189 3.307A6.713 6.713 0 0 1 3.1 15.444c-2.679-4.513.287-8.737.888-9.548A4.373 4.373 0 0 0 5 1.608c1.287.953 6.445 3.218 5.537 10.5 1.5-1.122 2.706-3.01 2.853-6.14 1.433 1.049 3.993 5.395 1.757 9.117Z"
        ></path>
      </svg>
      <span class="sr-only">Fire icon</span>
    </div>
    <div class="ms-3 text-sm font-normal">
      {t("miscellaneous.thanksForContact")}
    </div>
    <button
      type="button"
      class="ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700"
      data-dismiss-target="#toast-default"
      aria-label="Close"
    >
      <span class="sr-only">Close</span>
      <svg
        class="w-3 h-3"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
      </svg>
    </button>
  </div>
</Container>

<script>

  function showToast() {
    const toast = document.getElementById("toast-default");
    toast.classList.remove("hidden");
    toast.classList.add("flex");
    setTimeout(() => {
      toast.classList.remove("flex");
      toast.classList.add("hidden");
    }, 5000);
  };

  async function postEmail(e) {
    e.preventDefault();
    const serviceId = import.meta.env.PUBLIC_SERVICE_ID;
    const templateId = import.meta.env.PUBLIC_TEMPLATE_ID;
    const userId = import.meta.env.PUBLIC_USER_ID;

    const from_name = document.getElementById("name").value;
    const reply_to = document.getElementById("email").value;
    const message = document.getElementById("message").value;

    var data = {
      service_id: serviceId,
      template_id: templateId,
      user_id: userId,
      template_params: {
        from_name: from_name,
        reply_to: reply_to,
        message: message,
      },
    }

    console.log(data);

    showToast();
    return;


    const response = await fetch(
      "https://api.emailjs.com/api/v1.0/email/send",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      },
    )
      .then((response) => {
        showToast();
      })
      .catch((error) => {
        console.error("Error:", error);
      });

    // fetch("https://api.emailjs.com/api/v1.0/email/send", {
    //   method: "POST",
    //   headers: {
    //     "Content-Type": "application/json",
    //   },
    //   body: JSON.stringify(data),
    // })
    //   .then((response) => {
    //     console.log("Success:", response);
    //   })
    //   .catch((error) => {
    //     console.error("Error:", error);
    //   });
  }

  document.getElementById("contact-form").addEventListener(
    "submit",
    (e) => {
      postEmail(e);
    },
    true,
  );
</script>
